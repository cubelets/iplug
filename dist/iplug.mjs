function e(e){const t=new Map(Object.entries(e||{}).map((([e,t])=>[e,"function"==typeof t?t():t])));return{init:function(e,n){const r=new Map([].concat(e||[...t.keys()]).map((e=>Array.isArray(e)?e:[e,[]])).reduce(((e,[r,a])=>Object.entries(t.get(r)||{[r]:()=>{throw new Error(`plugin ${r} is missing`)}}).map((([e,t])=>t&&[e,t({...a,...n})])).filter((e=>e)).reduce(((e,[t,n])=>(e.set(t,[].concat(e.get(t)||[],n||[])),e)),e)),new Map)),a=(e,t)=>(r.get(e)||[e=>e]).reduce(((e,t)=>t(e)),t);return a.reduce=a.chain=a.series=a,a.map=a.parallel=a.all=(e,t)=>(r.get(e)||[]).map((function(e){return e(t)})),a}}}export{e as default};
//# sourceMappingURL=iplug.mjs.map
